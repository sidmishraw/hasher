package com.orion.sidmishraw.projectorion;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;

import com.orion.sidmishraw.projectorion.utils.ProcessingUtils;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }

    public void processInput(View view) {

        // finding the edittext by Id, just like in HTMl and javascript
        // we use getElementById in js for finding the DOM element,
        // here too we use the DOM Id which is maintained in the R.java
        // file that is autogenerated.
        EditText inputTextWidget = (EditText) findViewById(R.id.multilineInputField);

        // The string content of the text of the EditText widget.
        String inputString = inputTextWidget.getText().toString();

        // the output text can be made by calling the processing service.
        // the instance is a singleton inorder for having just one instance
        // through the entire application lifetime.
        // alternative approach includes, using static methods in the Utils class
        // I suppose this is the generally followed protocol, but I'm using the
        // singleton approach since I just want to test it out.
        String outputText = ProcessingUtils.getInstance().buildHashMap(inputString);

        TextView textView = (TextView) findViewById(R.id.labelViewOutput);

        textView.setText(outputText);
    }
}
